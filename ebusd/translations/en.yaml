configuration:
  device:
    name: Device
    description: -d, --device=DEV Use DEV as eBUS device ("enh:DEVICE" or "enh:IP:PORT" for enhanced device,"DEVICE" for serial device, or "[udp:]IP:PORT" for network device) [/dev/ttyUSB0]
  latency:
    name: Latency
    description: ebusd --latency=MSEC Transfer latency in ms [0 for USB, 10 for IP]
  readonly:
    name: Read Only
    description: Only read from device, never write to it
  foreground:
    name: foreground
    description: show output in supervisor log (required to keep running ebusd)
  configpath:
    name: Config Path
    description: Read CSV config files from custom path. You can create a local copy of https://github.com/john30/ebusd-configuration in your "/config" folder and change configpath to e.g. "/config/ebusd-configuration/latest/en" [http://ebusd.eu/config/]
  scanconfig:
    name: Scan Config
    description: Pick CSV config files matching initial scan (ADDR="none" or empty for no initial scan message "full" for full scan, or a single hex address to scan, default is to send a broadcast ident message).
  mqtthost:
    name: MQTT Host
    description: Connect to MQTT broker on HOST [localhost]
  mqttport:
    name: MQTT serverPort
    description: Connect to MQTT broker on PORT (usually 1883), 0 to disable [0]
  mqttuser:
    name: MQTT User
    description: Connect as USER to MQTT broker (no default)
  mqttpass:
    name: MQTT Password
    description: Use PASSWORD when connecting to MQTT broker (no default)
  mqttjson:
    name: MQTT Json
    description: Publish in JSON format instead of strings
  mqttlog:
    name: MQTT Log
    description: Log library events
  mqttretain:
    name: MQTT Retain
    description: All MQTT messages sent with retain flag
  commandline_options:
    name: Custom Commandline Options
    description: Add any additional commandline options.  See eBUSd wiki for all available options https://github.com/john30/ebusd/wiki/2.-Run
  http:
    name: Enable HTTP access
    description: Enable HTTP client access
  accesslevel:
    name: Access Level
    description: Set default access level(s) to LEVEL ("*" for everything, multiple levels separated by comma)
  loglevel_all:
    name: Log level for all messages 
    description: Only write log for matching AREA(S) below or equal to LEVEL [all:notice].  This is an alternative form to using --logareas/--loglevel and allows to specify an individual level for each area by using the option multiple times. E.g. for having only bus messages in info level and all other in error level, use --log=all:error --log=bus:info
  loglevel_network:
    name: Log level for network messages 
    description: Only write log for matching AREA(S) below or equal to LEVEL [all:notice].  This is an alternative form to using --logareas/--loglevel and allows to specify an individual level for each area by using the option multiple times. E.g. for having only bus messages in info level and all other in error level, use --log=all:error --log=bus:info
  loglevel_update:
    name: Log level for update messages 
    description: Only write log for matching AREA(S) below or equal to LEVEL [all:notice].  This is an alternative form to using --logareas/--loglevel and allows to specify an individual level for each area by using the option multiple times. E.g. for having only bus messages in info level and all other in error level, use --log=all:error --log=bus:info
  loglevel_bus:
    name: Log level for bus messages 
    description: Only write log for matching AREA(S) below or equal to LEVEL [all:notice].  This is an alternative form to using --logareas/--loglevel and allows to specify an individual level for each area by using the option multiple times. E.g. for having only bus messages in info level and all other in error level, use --log=all:error --log=bus:info
  loglevel_main:
    name: Log level for main messages 
    description: Only write log for matching AREA(S) below or equal to LEVEL [all:notice].  This is an alternative form to using --logareas/--loglevel and allows to specify an individual level for each area by using the option multiple times. E.g. for having only bus messages in info level and all other in error level, use --log=all:error --log=bus:info
  custom_device:
    name: Custom device e.g. ip address of wireless adapter
    description: Use this option if your device is not listed in the config options
